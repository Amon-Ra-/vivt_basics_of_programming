/*
Номер и вид работы: Лабораторная работа №1
Название работы: Линейные программы, ветвления и циклы
Ф.И.О.: 
Номер зачетной книжки: 
Группа: 
Вариант: №9
*/
/*
Вариант 9
? Найти максимальный по модулю элемент массива.
? Найти сумму элементов массива, расположенных между первым и
вторым положительными элементами.
? Преобразовать массив таким образом, чтобы элементы, равные
нулю, располагались после всех остальных.
*/

//Подключение стандартных библиотек
#include <iostream>
#include <locale>
#include <cstdlib>
#include <cmath>
using namespace std;

// Вывод массива в консоль
void print_arr();

// Инициализация массива через функцию рандома
void init_arr();


// Поиск максимального элемента
void search_max();

// Сумма элементов между двумя положительными
void sum_between_one_two();

// Выполнение сортировки элементов массива
void sort_arr();

// Константа размера массива
const int arr_size = 20;

//Определение переменной arr, которая будет целочесленным одномерным массивом
int arr[arr_size];

//Определение переменных используемых в функциях и обозначение их начальных значений
int i, max_elem, sum, j, temp = 0;

int main()
{
    setlocale(LC_ALL, "Russian");
    cout << "Массив:\n";

    //Выполним инициализацию массива.
    init_arr();
    //Выводим массив.
    print_arr();
    
    //Поиск максимального по модулю элемента массива.
    search_max();
    cout << "1. Наибольший элемент по модулю: " << max_elem << '\n';
    
    //Сумма элементов между двумя положительными элементами массива.
    sum_between_one_two();
    cout << "2. Сумма элементов между двумя положительными элементами: " << sum << '\n';
    
    //Сортировка массива.
    cout << "3. Элементы, равные нулю, располагаются после всех остальных.\n";
    sort_arr();
    print_arr();
}

// Инициализация массива через функцию рандома, т.е. массив собирается рандомными символами.
void init_arr()
{
    int sign = 0;

    //В цикле собираем массив целых рандомных чисел.
    srand(time(NULL)); //перегенерируем рандомные числа отладка уже не нужна
    for (i = 0; i < arr_size; ++i)
    {
        arr[i] = rand() % 100;
        sign = rand() % 2;
        if (sign) arr[i] *= -1;
    }
    
    //Для задания добавляем в некоторых элементах нулевые значения
    arr[3] = 0;
    arr[5] = 0;
    arr[10] = 0;
    arr[15] = 0;
}

// Вывод массива на экран
void print_arr()
{
    for (i = 0; i < arr_size; ++i)
    {
        cout << arr[i] << ' ';
    }
    cout << '\n';
}

//Поиск максимального по модулю элемента
void search_max()
{

    // перебираем массив, присваивая переменной, если значение, больше предыдущего
    for (i = 0; i < arr_size; i++)
    {
        if (abs(arr[i]) > max_elem)
        {
            max_elem = arr[i];
        }
    }
}

//Вычисление суммы элементов массива между первым и вторым положительными элементами
void sum_between_one_two()
{
    //Объявляем переменные
    int temp = 0;
    i = 0;
    //Ищем первое положительное
    //Если нашли, выходим из цикла
    while (i < arr_size)
    {
        if (arr[i] > 0)
        {
            temp = i + 1;
            break;
        }
        
        i++;
    }
    
    //Суммируем элементы, пока не столкнемся с положительным элементом
    while (temp < arr_size)
    {
        if (arr[temp] > 0)
        {
            break;
        }
        
        sum += arr[temp];
        temp++;
    }
}

// Переносим все элементы равные 0 в конец массива
void sort_arr()
{
    for (int i=0; i <= arr_size; i++)                                       // Цикл for , который переставляет местами элементы массива
    {
        if(arr[i] == 0)
        {
            for (j = i + 1; j < arr_size; j++)
            if ( arr[j] !=0 && arr[i]==0 )
            {
                int a = arr[j];
                arr[j] = arr[i];
                arr[i] = a;
            }
            
        }
        
    }
}